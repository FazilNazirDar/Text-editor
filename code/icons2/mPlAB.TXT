;WAP TO SWAP TWO NUMBERS LOCATED AT TWO DIFFERENT LOCATIONS
MVI A,24H;A=24H
STA 0045H;M[0045]=24H
MVI A,27H;A=27H
STA 0017H;M[0017]=27H

LDA 0045H;A=24H
MOV B,A;B=A=24H
LDA 0017H;A=27H
STA 0045H;M[0045]=27H
MOV A,B;A=B
STA 0017H;M[0017]=24H
-------------------------------------------------

;THE MEMORY LOCATION 2050H HOLDS THE DATA BYTE F7H 
;WRITE INSTRUCTIONS TO TRANSFER THE DATA BYTE TO 
;ACCUMULATOR USING DIFFERENT OPCODES MOV,LDAX AND LDA

LXI H,0050H
MOV A,M
STA 0045H

LXI B,0050H
LDAX B
STA 0046H

LDA 0050H
STA 0047H
HLT
------------------------------------------------------
;WAP TO DISPLAY NUMBERS FROM 1 TO 9 CALLING 
;SUBROUTINE IN BETWEEN EVERY OUTPUT
LXI D,0001H
MVI B,09H
MVI C,01H
LOOP1:MOV A,C
STAX D
CALL DELAY
INX D
INR C
DCR B
JNZ LOOP1
DELAY:MVI H,01
LOOP2:MVI L,FFH
NEXT:DCR L
JNZ NEXT 
DCR H
JNZ LOOP2
RET
HLT

; TAKE TWO DATA 8B AND 6F, INCREMENT 6F BY ONE AND 
;ADD TO 8B AND SENT TO PORT1

LDA 0000H
MOV B,A
LDA 0001H
INR A
ADD B
STA 0002H
HLT

;ADDITION OF TWO 16 BIT NUMBERS WITH CARRY
MVI C,00H
LHLD 0000H
XCHG 
LHLD 0002H
DAD D
JNC NOC
INR C
NOC:SHLD 0005H
MOV A,C
STA 0007H
HLT

;SUBTRACT TWO 8 BIT NUMBERS WITH BORROW
MVI C,00H
LXI H,0000H
MOV A,M
INX H
MOV B,M
SUB B
JNC STORE
INR C
STORE:INX H
MOV M,A
INX H
MOV M,C
HLT

;MULTIPLICATION OF TWO 8-BIT NUMBERS 
LXI H,0005H
MOV E,M
MVI D,00H
INX H
MOV A,M
LXI H,0000H
CPI 00H
JZ DISPLAY
LOOP:DAD D
DCR A
JNZ LOOP
DISPLAY:SHLD 0009H
HLT

;DIVISION OF TWO 8-BIT NUMBERS 
LXI H,0100H
MOV A,M
INX H
MOV B,M
MVI C,00H
LOOP:CMP B
JC RES
SUB B
INR C
JMP LOOP

RES:INX H
MOV M,A
INX H
MOV M,C
HLT

;TO FIND THE LARGEST NUMBER IN AN ARRAY
LXI H,0110H
MOV C,M
DCR C
INX H
MOV A,M
SHLD 0120H
COMP:INX H
CMP M
JNC SKIP
MOV A,M
SHLD 0120H
SKIP:DCR C
JNZ COMP
STA 0122H
HLT

;FACTORIAL OF A NUMBER 
LDA 0000H
MOV L,A
MVI H,00H
MOV B,A
FACT:DCR B
JZ RES
CALL MUL
JMP FACT

MUL:XCHG 
MOV A,B
LXI H,0000H
LOOP:DAD D
DCR A
JNZ LOOP
RET
RES:SHLD 0023H 
HLT

;FIBONACCI SERIES
LXI H,0300H
MVI A,00H
MOV M,A
MVI B,01H
INX H
MOV M,B
MVI C,05H
FIB:ADD B
INX H
MOV M,A
MOV A,B
MOV B,M
DCR C
JNZ FIB
HLT 


Square of a number
;Fadil Mir 2020BCSE071
LXI H, 0000H
XRA A
MOV B, M
LOOP: ADD M
DCR B
JNZ LOOP
STA 0001H
HLT
Sum of digits of a no.
;Fadil Mir 2020BCSE071
LDA 0000H
MOV C, A
ANI 0FH
MOV B, A
MOV A, C
ANI F0H
RRC
RRC
RRC
RRC
ADD B
STA 0001H
HLT
Sum of even no.’s in an array
;Fadil Mir 2020BCSE071
LDA 0000H
MVI C, 0AH
MVI B, 00H
LXI H, 0001H
LOOP: MOV A, M
ANI 01H
JNZ SKIP
MOV A, B
ADD M
MOV B, A
SKIP: INX H
DCR C
JNZ LOOP
STA 000CH
HLT
Use of register pair to demonstrate delay
;Fadil Mir 2020BCSE071
XRA A
MVI D, 0AH
LOOP: STA 0000H
CALL DELAY
LDA 0000H
ADI 01H
DAA
DCR D
JNZ LOOP
HLT
DELAY: LXI B, 0011H
LOOP2: DCX B
MOV A, B
ORA C
JNZ LOOP2
RET
HLT
Delay using single register
;Fadil Mir 2020BCSE071
XRA A
MVI D, 0AH
LOOP: STA 0000H
CALL DELAY
LDA 0000H
ADI 01H
DAA
DCR D
JNZ LOOP
HLT
DELAY: MVI B, 11H
LOOP2: DCR B
JNZ LOOP2
RET
HLT
Factorial
;Fadil Mir 2020BCSE071
LXI H, 0000H
MOV B, M
MVI D, 01H
FACT: CALL MUL
DCR B
JNZ FACT
INX H
MOV M, D
HLT
MUL: MOV E, B
XRA A
ML: ADD D
DCR E
JNZ ML
MOV D, A
RET
Division of 8 bit no.’s
;Fadil Mir 2020BCSE071
START: LXI H, 0CH
MVI B, 04H
MVI C, 08H
UP: DAD H
MOV A, H
SUB B
JC DOWN
MOV H, A
INR L
DOWN: DCR C
JNZ UP
SHLD 0001H
HLT


;CHECK 8 BIT NUMBER IS A PALINDROME 
LDA 0100H
MOV H, A
MVI C,08H
LOOP:MOV A,H
RLC
MOV H,A
MOV A,D
RAR
MOV D,A
DCR C
JNZ LOOP
MOV A,H
CMP D 
JZ TRUE
MVI A,00H
JMP EXIT 
TRUE:MVI A,FFH 
EXIT:STA 0150H   		
HLT

